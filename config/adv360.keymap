/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Tristan Gosselin-Hane
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"
        #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        language_change_windows: language_change_windows {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt RIGHT_WIN &kp SPACE &kt RIGHT_WIN>;
            label = "LANGUAGE_CHANGE_WINDOWS";
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // https://zmk.dev/docs/behaviors/hold-tap
        // Always prefer the tap behaviour on mod-tap key if we pressed something else in the last 125ms
        // This is useful for my '/super key so that the super never gets triggered while I am in the middle
        // of typing something and a ' is immediately emitted

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL         &kp N1                &kp N2                    &kp N3        &kp N4  &kp N5  &kp LEFT_ARROW                                                         &kp RIGHT_ARROW    &kp N6  &kp N7  &kp N8     &kp N9            &kp N0             &kp MINUS
&kp TAB           &kp Q                 &kp W                     &kp E         &kp R   &kp T   &kp DEL                                                                &kp LEFT_BRACKET   &kp Y   &kp U   &kp I      &kp O             &kp P              &kp BSLH
&kp LEFT_CONTROL  &kp A                 &kp S                     &kp D         &kp F   &kp G   &kp GRAVE       &kp LEFT_ALT   &kp K_MENU      &tog 4         &kp ESC  &kp RIGHT_BRACKET  &kp H   &kp J   &kp K      &kp L             &kp SEMI           &gqt LEFT_WIN APOSTROPHE
&kp LSHFT         &kp Z                 &kp X                     &kp C         &kp V   &kp B                                  &kp HOME        &kp PAGE_UP                                &kp N   &kp M   &kp COMMA  &kp PERIOD        &kp SLASH          &kp RIGHT_SHIFT
&mo 1             &kp NON_US_BACKSLASH  &language_change_windows  &kp LEFT_ALT  &mo 2           &kp SPACE       &kp BACKSPACE  &kp END         &kp PAGE_DOWN  &kp TAB  &kp ENTER                  &mo 3   &mo 1      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &mo 2
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                  &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                            &bootloader             &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none      &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none         &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC    &none                                             &none      &none                                           &none         &bl BL_INC    &bl BL_INC    &none         &none         &none
&none  &none         &none         &none         &none                       &rgb_ug RGB_TOG         &bl BL_TOG  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &none         &none         &none         &none         &none
            >;
        };

        layer_Sybmols {
            bindings = <
&kp ESC  &kp F1           &kp F2      &kp F3                &kp F4                 &kp F5     &trans                                      &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans   &kp EXCLAMATION  &kp AT      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE   &trans                                      &trans  &trans  &trans  &trans  &trans  &trans   &kp F12
&trans   &kp HASH         &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans   &kp PERCENT      &kp CARET   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans   &trans
&trans   &kp EQUAL        &trans      &trans                &trans                            &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans   &trans
            >;
        };

        layer_Arrows {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &kp UP_ARROW    &trans           &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans                   &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Gword {
            bindings = <
&trans  &trans      &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &kp Q   &kp W   &kp E   &kp R   &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LSHIFT  &kp A   &kp S   &kp D   &kp F   &trans  &trans  &tog 0      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &kp Z   &kp X   &kp C   &kp V                   &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
